package io.github._4drian3d.unsignedvelocity.listener;

import com.github.retrooper.packetevents.protocol.player.ClientVersion;
import com.github.retrooper.packetevents.protocol.player.User;
import com.velocitypowered.proxy.connection.client.ConnectedPlayer;
import io.github._4drian3d.unsignedvelocity.UnSignedVelocity;

public interface LoadableEventListener {
    void register(UnSignedVelocity plugin);

    boolean canBeLoaded();

    default boolean checkConnection(final ConnectedPlayer player) {
        try {
            player.ensureAndGetCurrentServer().ensureConnected();
            return true;
        } catch(final IllegalStateException e) {
            // The player is probably on a fake server or
            // some other place generated by another plugin,
            // so handling the packet would be avoided
            return false;
        }
    }

    default boolean userClientVersionEnforcesSigning(final User user) {
        return user.getClientVersion().isNewerThanOrEquals(ClientVersion.V_1_19) &&
                user.getClientVersion().isOlderThanOrEquals(ClientVersion.V_1_19_1);
    }
}
